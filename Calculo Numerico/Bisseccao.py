# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yWXpC9G4dmJQMSTPliEVJG9CvDw7UhKL
"""

# @title Default title text
import numpy as np

# Intervalo inicial
a = -0.5
b = 0.5

# Precisão
e = 0.00009

def f(x):
    return np.exp(x) - 2*x - 1

def bissecao(f, a, b, e):
    # Inicializando o número de iterações
    iteracoes = 0

    # Verificando se a função muda de sinal nos extremos do intervalo
    if f(a) * f(b) >= 0:
        print("A função não muda de sinal nos extremos do intervalo.")
        return None, None

    # Inicializando a variável que guardará o valor da raiz
    raiz = None

    # Iniciando o loop para o método da bisseção
    while (b - a) / 2 > e:
        # Calculando o ponto médio do intervalo
        c = (a + b) / 2

        # Verificando se c é a raiz
        if f(c) == 0:
            raiz = c
            break

        # Atualizando os limites do intervalo
        if f(c) * f(a) < 0:
            b = c
        else:
            a = c

        # Incrementando o número de iterações
        iteracoes += 1

    # Aproximação da raiz
    raiz = (a + b) / 2

    # Retornando a raiz e o número de iterações
    return raiz, iteracoes


# Chamando o método da bisseção
raiz, iteracoes = bissecao(f, a, b, e)

# Verificando se a raiz foi encontrada
if raiz is not None:
    print("A raiz aproximada é:", raiz)
    print("Número de iterações:", iteracoes)
else:
    print("Não foi possível encontrar a raiz no intervalo especificado.")